<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hry.mall.member.commend.dao.AppCommendUserDao">


     <select id="findLen" resultType="java.lang.Integer">
		select count(*) from app_commend_user where sid like CONCAT('%',#{id},'%')
	</select>

	<select id="findIsRealLen" resultType="java.lang.Integer">
		select count(*) FROM app_customer ac
		LEFT JOIN app_commend_user acu
		ON ac.id = acu.uid
		where ac.states = '2' and sid like CONCAT('%',#{id},'%')
	</select>

	  <select id="findLenall" resultType="java.lang.Integer">
	select * from app_commend_user a LEFT JOIN (select ISNULL(sum(rewardmoney)) summoneyr, custromerName from app_commend_trade group by custromerName) b on a.username=b.custromerName
	</select>

	<select id="findLikeBySid" parameterType="java.util.Map" resultType="hry.mall.member.commend.model.AppCommendUser">
		select * from app_commend_user where sid like '%${pid1}%' and uid!=#{pid2};
	</select>
	<select id="findByAloneMoneyIsNotZero" parameterType="java.util.Map" resultType="hry.mall.member.commend.model.AppCommendUser">
		SELECT
			id,
			ifnull(aloneProportion, 0) AS al
		FROM
			app_commend_user
		WHERE
			(
				SUBSTRING_INDEX(
					SUBSTRING_INDEX(sid, ',' ,- 1),
					',' ,- 1
				) = #{sid}
				OR uid = #{sid}
			) and uid!= #{uid}
		HAVING
			al != 0
	</select>
	
	
	
	
	<resultMap id="findPageBySqlMap"   type="hry.mall.member.commend.model.AppCommendUser">
		<id column="id" property="id" javaType="java.lang.Long" />
		<result column="uid" property="uid" javaType="java.lang.Long" />
		<result column="pid" property="pid" javaType="java.lang.Long" />
		<result column="created" property="created" javaType="java.util.Date" />
		<result column="modified" property="modified" javaType="java.util.Date" />
		<result column="saasId" property="saasId" javaType="java.lang.String" />

		<result column="receCode" property="receCode" javaType="java.lang.String" />
		<result column="isFrozen" property="isFrozen" javaType="java.lang.Integer" />
		<result column="aloneProportion" property="aloneProportion" javaType="java.math.BigDecimal" />
		<result column="oneNumber" property="oneNumber" javaType="java.lang.Integer" />
		<result column="twoNumber" property="twoNumber" javaType="java.lang.Integer" />
		<result column="threeNumber" property="threeNumber" javaType="java.lang.Integer" />
		<result column="laterNumber" property="laterNumber" javaType="java.lang.Integer" />
		<result column="rewardCount" property="rewardCount" javaType="java.math.BigDecimal" />
		<result column="shopCount" property="shopCount" javaType="java.math.BigDecimal" />
		<result column="allNumber" property="allNumber" javaType="java.lang.Integer" />
		<association property="appPersonInfo" javaType="hry.mall.lend.person.model.AppPersonInfo">
			<result column="created" property="created" javaType="java.util.Date" />
			<result column="modified" property="modified" javaType="java.util.Date" />
			<result column="saasId" property="saasId" javaType="java.lang.String" />
			
			<result column="email" property="email" javaType="java.lang.String" />
			<result column="mobilePhone" property="mobilePhone" javaType="java.lang.String" />
			<result column="country" property="country" javaType="java.lang.String" />
			<result column="surname" property="surname" javaType="java.lang.String" />
			<result column="trueName" property="trueName" javaType="java.lang.String" />
			<result column="cardType" property="cardType" javaType="java.lang.Integer" />
			<result column="cardId" property="cardId" javaType="java.lang.String" />
		</association>
	</resultMap>
	
	
	<!-- 通过sql分页查询 -->
	<select id="findPageBySql" parameterType="java.util.Map"
		resultMap="findPageBySqlMap" >
		SELECT a.id,a.receCode,a.isFrozen,a.aloneProportion,
		a.oneNumber,a.twoNumber,a.threeNumber,a.laterNumber,
		b.email,b.mobilePhone,b.country
		 FROM app_commend_user AS a 
		LEFT JOIN app_person_info
		AS b ON a.uid = b.customerId
		<where>
			<if test="email!=null and email!='' ">
				b.email like
				#{email,jdbcType=VARCHAR}
			</if>
			<if test="mobilePhone!=null and mobilePhone!='' ">
				and b.mobilePhone like
				#{mobilePhone,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据isCulCommend查询所有的id -->
	<select id="findByIsCulCommend" resultType="hry.mall.member.commend.model.AppCommendUser" >
		select id,sid from app_commend_user where isCulCommend = #{isCulCommend} 
	</select>
	
	<!-- 根据isCulCommend查询所有的id -->
	<update id="updateIsCulCommendById">
		update app_commend_user set isCulCommend = #{isCulCommend}
		where id = #{id}
	</update>
	
	<resultMap id="findConmmendPageBySqlMap"   type="hry.mall.member.commend.model.AppCommendUser">
		<id column="id" property="id" javaType="java.lang.Long" />
		<result column="created" property="created" javaType="java.util.Date" />
		<result column="receCode" property="receCode" javaType="java.lang.String" />
		<result column="nickNameOtc" property="nickNameOtc" javaType="java.lang.String" />
		<result column="uid" property="uid" javaType="java.lang.Long" />
		<result column="pid" property="pid" javaType="java.lang.Long" />
		<association property="appPersonInfo" javaType="hry.mall.lend.person.model.AppPersonInfo">
			<result column="email" property="email" javaType="java.lang.String" />
			<result column="mobilePhone" property="mobilePhone" javaType="java.lang.String" />
			<result column="surname" property="surname" javaType="java.lang.String" />
			<result column="trueName" property="trueName" javaType="java.lang.String" />
			<result column="cardType" property="cardType" javaType="java.lang.Integer" />
			<result column="cardId" property="cardId" javaType="java.lang.String" />
		</association>
	</resultMap>
	<!-- 根据sid查询该用户的推荐级用户的分页列表 -->
	<select id="findConmmendPageBySql" resultMap="findConmmendPageBySqlMap" >
		SELECT
			a.id,
			a.pid,
			a.uid,
			a.created,
			a.receCode,
			b.email,
			b.mobilePhone,
			b.cardId,
			c.nickNameOtc
			FROM
			app_commend_user AS a
			LEFT JOIN app_person_info AS b ON a.uid = b.customerId
			LEFT JOIN app_customer as c On a.uid = c.id
			where a.sid like CONCAT('%', #{sid},'%')
			limit #{start},#{lengthpage}
	</select>
	
	<!-- 根据sid 查询数量 -->
	<select id="findConmmendCountBySid" resultType="java.lang.Long" >
		select count(1) from app_commend_user where sid like CONCAT('%', #{sid},'%')
	</select>
	
		<!-- 根据sid查询该用户的推荐级用户的分页列表 -->
	<resultMap id="frontMap"   type="hry.mall.integral.remote.model.AppCommendUserManage">
		<id column="id" property="id" javaType="java.lang.Long" />
		<result column="created" property="created" javaType="java.util.Date" />
		<result column="receCode" property="receCode" javaType="java.lang.String" />
		<result column="nickNameOtc" property="nickNameOtc" javaType="java.lang.String" />
		<association property="appPersonInfo" javaType="hry.mall.integral.remote.model.AppPersonInfoManage">
			<result column="email" property="email" javaType="java.lang.String" />
			<result column="mobilePhone" property="mobilePhone" javaType="java.lang.String" />
		</association>
	</resultMap>

	<select id="findConmmendFrontPageBySql" resultMap="frontMap" >
		SELECT
			a.uid id,
			a.created,
			a.receCode,
			b.email,
			b.mobilePhone,
			c.nickNameOtc
		FROM
			app_commend_user AS a
		LEFT JOIN app_person_info AS b ON a.uid = b.customerId
		LEFT JOIN app_customer AS c ON c.id=a.uid
		LEFT JOIN shop_customer_integral as d ON d.memberId = c.id
		where a.sid like CONCAT('%', #{sid},'%') and d.levelId is not null
			limit #{start},#{lengthpage}
	</select>
	<!-- 通过sql分页查询 -->
	<select id="findPageBySqlIntegral" resultMap="findPageBySqlMap" parameterType="java.lang.Long" >
		SELECT
		a.id,
		a.receCode,
		a.isFrozen,
		a.aloneProportion,
		a.oneNumber,
		a.twoNumber,
		a.threeNumber,
		a.laterNumber,
		b.email,
		b.mobilePhone,
		b.country,
		b.cardId,
		b.trueName,
		b.surname,
		a.oneNumber+ a.twoNumber+ a.threeNumber+a.laterNumber as allNumber ,
		IFNULL(d.rewardCount,0) as rewardCount,
		IFNULL(f.shopCount,0) as shopCount
		FROM
		app_commend_user AS a
		LEFT JOIN app_person_info AS b ON a.uid = b.customerId
		LEFT JOIN (SELECT
		s.memberId AS memberId,
		SUM(rewardintegralCount) AS rewardCount
		FROM
		shop_integral_detail AS s
		LEFT JOIN shop_integral_task_mining AS task ON task.id = s.taskId
		WHERE
		task.taskKey = 'recommendKey'
		GROUP BY
		s.memberId) as d  on d.memberId =a.uid
		LEFT JOIN (SELECT
		s.memberId AS memberId,
		SUM(rewardintegralCount) AS shopCount
		FROM
		shop_integral_detail AS s
		LEFT JOIN shop_integral_task_mining AS task ON task.id = s.taskId
		WHERE
		task.taskKey = 'shopKey'
		GROUP BY
		s.memberId) as f  on f.memberId =a.uid
		<where>
			a.uid = #{memberId}
		</where>
	</select>

	<select id="findDateUserCount" resultType="java.lang.Integer">
		select count(a.id) FROM app_commend_user a
		where 1=1 and
		a.created BETWEEN #{startTime}
				AND #{endTime} and
		a.sid like CONCAT('%', #{memberId},'%')
	</select>
	
   <select id="findUserCount" resultType="java.lang.Integer">
		select count(a.id) FROM app_commend_user a
		where 1=1 and
		a.sid like CONCAT('%', #{memberId},'%')
	</select>


	<!-- 获取层级内的所有下级id-->
	<select id="getSubordinateIdBySeries" parameterType="java.lang.String" resultType="java.lang.Long" >
		select ac.uid from app_commend_user  ac
		where ac.sid like #{param}
	</select>



</mapper>
